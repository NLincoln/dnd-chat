# GitHub Actions
# https://help.github.com/en/articles/configuring-a-workflow
name: Cypress tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test1:
    services:
      db:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    name: Cypress test
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@master

      # install a specific version of Node using
      # https://github.com/actions/setup-node
      - name: Use Node.js v14
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - uses: actions/setup-elixir@v1
        with:
          otp-version: "23.0"
          elixir-version: "1.10.3"

      - run: |
          mix deps.get
          mix setup

      - run: mix phx.server &

      # just so we learn about available environment variables GitHub provides
      - name: Print env variables
        run: |
          npm i -g @bahmutov/print-env
          print-env GITHUB

      - name: verify Cypress
        env:
          # make sure every Cypress install prints minimal information
          CI: 1
        run: |
          npx cypress verify
          npx cypress info
        working-directory: ./assets

      # Restore the previous NPM modules and Cypress binary archives.
      # Any updated archives will be saved automatically after the entire
      # workflow successfully finishes.
      # See https://github.com/actions/cache
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Cypress binary
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      # Starts local server, then runs Cypress tests and records results on the dashboard
      - name: Cypress tests
        run: npx cypress run
        working-directory: ./assets
        env:
          # place your secret record key at
          # https://github.com/cypress-io/cypress-example-kitchensink/settings/secrets
          CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}
          TERM: xterm

      # Save videos and screenshots as test artifacts
      # https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@master
        with:
          name: screenshots
          path: assets/cypress/screenshots
          # there might be no screenshots created when:
          # - there are no test failures
          # so only upload screenshots if previous step has failed
          if: failure()
      # video should always be generated
      - uses: actions/upload-artifact@master
        with:
          name: videos
          path: assets/cypress/videos
